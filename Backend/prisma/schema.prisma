generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Abonne {
  IdUser       Int
  IdAbonnement String      @db.VarChar(50)
  DateDebut    DateTime?   @db.DateTime(0)
  DateFin      DateTime?   @db.DateTime(0)
  Utilisateur  Utilisateur @relation(fields: [IdUser], references: [IdUser], onUpdate: Restrict, map: "Abonne_ibfk_1")
  Abonnement   Abonnement  @relation(fields: [IdAbonnement], references: [IdAbonnement], onUpdate: Restrict, map: "Abonne_ibfk_2")

  @@id([IdUser, IdAbonnement])
  @@index([IdAbonnement], map: "IdAbonnement")
}

model Abonnement {
  IdAbonnement   String         @id @db.VarChar(50)
  NomAbonnement  String?        @db.VarChar(50)
  Prix           Decimal?       @db.Decimal(15, 2)
  Duree          Int?           @db.TinyInt
  Description    String?        @db.VarChar(512)
  Idtype         Int
  Abonne         Abonne[]
  typeAbonnement typeAbonnement @relation(fields: [Idtype], references: [Idtype], onUpdate: Restrict, map: "Abonnement_ibfk_1")
  Facture        Facture[]

  @@index([Idtype], map: "Idtype")
}

model Articles {
  IdArticle      Int             @id @default(autoincrement())
  Nom            String?         @db.VarChar(50)
  Prix           Decimal?        @db.Decimal(15, 2)
  Description    String?         @db.VarChar(512)
  estARetirer    Boolean?
  IdCommande     Int?
  IdTypeVehicule Int
  IdMarque       Int
  IdPiece        Int
  IdEtat         Int
  Commande       Commande?       @relation(fields: [IdCommande], references: [IdCommande], onDelete: Restrict, onUpdate: Restrict, map: "Articles_ibfk_1")
  TypeVehicule   TypeVehicule    @relation(fields: [IdTypeVehicule], references: [IdTypeVehicule], onUpdate: Restrict, map: "Articles_ibfk_2")
  Marque         Marque          @relation(fields: [IdMarque], references: [IdMarque], onUpdate: Restrict, map: "Articles_ibfk_3")
  Pieces         Pieces          @relation(fields: [IdPiece], references: [IdPiece], onUpdate: Restrict, map: "Articles_ibfk_4")
  Etat           Etat            @relation(fields: [IdEtat], references: [IdEtat], onUpdate: Restrict, map: "Articles_ibfk_5")
  Colore         Colore[]
  ImagesArticle  ImagesArticle[]

  @@index([IdCommande], map: "IdCommande")
  @@index([IdEtat], map: "IdEtat")
  @@index([IdMarque], map: "IdMarque")
  @@index([IdPiece], map: "IdPiece")
  @@index([IdTypeVehicule], map: "IdTypeVehicule")
}

model Assigne {
  IdVille      Int
  IdCodePostal String     @db.VarChar(50)
  Ville        Ville      @relation(fields: [IdVille], references: [IdVille], onUpdate: Restrict, map: "Assigne_ibfk_1")
  CodePostal   CodePostal @relation(fields: [IdCodePostal], references: [IdCodePostal], onUpdate: Restrict, map: "Assigne_ibfk_2")

  @@id([IdVille, IdCodePostal])
  @@index([IdCodePostal], map: "IdCodePostal")
}

model CodePostal {
  IdCodePostal String    @id @db.VarChar(50)
  Cp           Int?      @db.TinyInt
  Assigne      Assigne[]
}

model Colore {
  IdArticle Int
  IdCouleur Int
  Articles  Articles @relation(fields: [IdArticle], references: [IdArticle], onUpdate: Restrict, map: "Colore_ibfk_1")
  Couleur   Couleur  @relation(fields: [IdCouleur], references: [IdCouleur], onUpdate: Restrict, map: "Colore_ibfk_2")

  @@id([IdArticle, IdCouleur])
  @@index([IdCouleur], map: "IdCouleur")
}

model Commande {
  IdCommande                                 Int         @id @default(autoincrement())
  DateCommande                               DateTime?   @db.DateTime(0)
  Poids                                      Decimal?    @db.Decimal(15, 3)
  IdUser                                     Int
  IdUser_1                                   Int
  Articles                                   Articles[]
  Utilisateur_Commande_IdUserToUtilisateur   Utilisateur @relation("Commande_IdUserToUtilisateur", fields: [IdUser], references: [IdUser], onUpdate: Restrict, map: "Commande_ibfk_1")
  Utilisateur_Commande_IdUser_1ToUtilisateur Utilisateur @relation("Commande_IdUser_1ToUtilisateur", fields: [IdUser_1], references: [IdUser], onUpdate: Restrict, map: "Commande_ibfk_2")
  Livraison                                  Livraison[]

  @@index([IdUser], map: "IdUser")
  @@index([IdUser_1], map: "IdUser_1")
}

model Couleur {
  IdCouleur  Int      @id @default(autoincrement())
  NomCouleur String   @db.VarChar(50)
  Colore     Colore[]
}

model Etat {
  IdEtat   Int        @id @default(autoincrement())
  NomEtat  String?    @db.VarChar(50)
  Articles Articles[]
}

model Facture {
  IdFacture    Int         @id @default(autoincrement())
  DateFacture  DateTime?   @db.DateTime(0)
  IdAbonnement String      @db.VarChar(50)
  IdUser       Int
  Abonnement   Abonnement  @relation(fields: [IdAbonnement], references: [IdAbonnement], onUpdate: Restrict, map: "Facture_ibfk_1")
  Utilisateur  Utilisateur @relation(fields: [IdUser], references: [IdUser], onUpdate: Restrict, map: "Facture_ibfk_2")

  @@index([IdAbonnement], map: "IdAbonnement")
  @@index([IdUser], map: "IdUser")
}

model Genre {
  IdGenre     String        @id @db.VarChar(50)
  NomGenre    String?       @db.VarChar(50)
  Utilisateur Utilisateur[]
}

model ImagesArticle {
  IdImage   Int      @id @default(autoincrement())
  image     String?  @db.Text
  IdArticle Int
  Articles  Articles @relation(fields: [IdArticle], references: [IdArticle], onUpdate: Restrict, map: "ImagesArticle_ibfk_1")

  @@index([IdArticle], map: "IdArticle")
}

model ImagesPostes {
  IdImage    Int     @id @default(autoincrement())
  ImagePoste String? @db.Text
  IdPoste    Int
  Posts      Posts   @relation(fields: [IdPoste], references: [IdPoste], onUpdate: Restrict, map: "ImagesPostes_ibfk_1")

  @@index([IdPoste], map: "IdPoste")
}

model Livraison {
  IdLivraison        Int         @id @default(autoincrement())
  DateLivraison      DateTime?   @db.Date
  estLivre           Boolean?
  NomDestinataire    String?     @db.VarChar(50)
  PrenomDestinataire String?     @db.VarChar(50)
  AdresseLivraison   String?     @db.VarChar(128)
  IdVille            Int
  IdUser             Int
  IdCommande         Int
  Ville              Ville       @relation(fields: [IdVille], references: [IdVille], onUpdate: Restrict, map: "Livraison_ibfk_1")
  Utilisateur        Utilisateur @relation(fields: [IdUser], references: [IdUser], onUpdate: Restrict, map: "Livraison_ibfk_2")
  Commande           Commande    @relation(fields: [IdCommande], references: [IdCommande], onUpdate: Restrict, map: "Livraison_ibfk_3")

  @@index([IdCommande], map: "IdCommande")
  @@index([IdUser], map: "IdUser")
  @@index([IdVille], map: "IdVille")
}

model Marque {
  IdMarque  Int        @id @default(autoincrement())
  NomMarque String?    @db.VarChar(50)
  Articles  Articles[]
  Modele    Modele[]
}

model Modele {
  IdModele    Int      @id @default(autoincrement())
  NomModele   String?  @db.VarChar(50)
  AnneeModele Decimal? @db.Decimal(4, 0)
  IdMarque    Int
  Marque      Marque   @relation(fields: [IdMarque], references: [IdMarque], onUpdate: Restrict, map: "Modele_ibfk_1")

  @@index([IdMarque], map: "IdMarque")
}

model Pieces {
  IdPiece  Int        @id @default(autoincrement())
  NomPiece String     @db.VarChar(50)
  Articles Articles[]
}

model Posts {
  IdPoste      Int            @id @default(autoincrement())
  Titre        String?        @db.VarChar(50)
  Description  String?        @db.VarChar(512)
  Dpublication DateTime?      @db.DateTime(0)
  IdUser       Int
  ImagesPostes ImagesPostes[]
  Utilisateur  Utilisateur    @relation(fields: [IdUser], references: [IdUser], onUpdate: Restrict, map: "Posts_ibfk_1")

  @@index([IdUser], map: "IdUser")
}

model TypeVehicule {
  IdTypeVehicule Int        @id @default(autoincrement())
  NomType        String?    @db.VarChar(50)
  Articles       Articles[]
}

model Utilisateur {
  IdUser                                  Int         @id @default(autoincrement())
  Nom                                     String      @db.VarChar(50)
  Prenom                                  String      @db.VarChar(50)
  Adresse                                 String      @db.VarChar(256)
  Dnaiss                                  DateTime    @db.Date
  Tel                                     Int         @db.SmallInt
  Mail                                    String      @unique(map: "Mail") @db.VarChar(125)
  MotDePasse                              String      @db.Text
  estVendeur                              Boolean
  estArtiste                              Boolean?
  IdGenre                                 String      @db.VarChar(50)
  IdVille                                 Int
  Abonne                                  Abonne[]
  Commande_Commande_IdUserToUtilisateur   Commande[]  @relation("Commande_IdUserToUtilisateur")
  Commande_Commande_IdUser_1ToUtilisateur Commande[]  @relation("Commande_IdUser_1ToUtilisateur")
  Facture                                 Facture[]
  Livraison                               Livraison[]
  Posts                                   Posts[]
  Genre                                   Genre       @relation(fields: [IdGenre], references: [IdGenre], onUpdate: Restrict, map: "Utilisateur_ibfk_1")
  Ville                                   Ville       @relation(fields: [IdVille], references: [IdVille], onUpdate: Restrict, map: "Utilisateur_ibfk_2")

  @@index([IdGenre], map: "IdGenre")
  @@index([IdVille], map: "IdVille")
}

model Ville {
  IdVille     Int           @id @default(autoincrement())
  NomVille    String?       @db.VarChar(50)
  Assigne     Assigne[]
  Livraison   Livraison[]
  Utilisateur Utilisateur[]
}

model typeAbonnement {
  Idtype         Int          @id @default(autoincrement())
  typeAbonnement String?      @db.VarChar(50)
  Abonnement     Abonnement[]
}
